(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{1038:function(e,t,n){"use strict";t.__esModule=!0,t.default=t.PREVIEW_VALUE=void 0;var i=n(22);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}t.PREVIEW_VALUE=12345.432;class r extends i.ExtensibleFunction{constructor(e){super(e=>this.format(e)),o(this,"id",void 0),o(this,"label",void 0),o(this,"description",void 0),o(this,"formatFunc",void 0),o(this,"isInvalid",void 0);const{id:t=(0,i.isRequired)("config.id"),label:n,description:r="",formatFunc:s=(0,i.isRequired)("config.formatFunc"),isInvalid:a=!1}=e;this.id=t,this.label=null!=n?n:t,this.description=r,this.formatFunc=s,this.isInvalid=a}format(e){return null==e||Number.isNaN(e)?""+e:e===Number.POSITIVE_INFINITY?"∞":e===Number.NEGATIVE_INFINITY?"-∞":this.formatFunc(e)}preview(e=12345.432){return e+" => "+this.format(e)}}var s=r;t.default=s},1045:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var i={DOLLAR:"$,.2f",DOLLAR_ROUND:"$,d",DOLLAR_ROUND_SIGNED:"+$,d",DOLLAR_SIGNED:"+$,.2f",FLOAT:",.2f",FLOAT_1_POINT:",.1f",FLOAT_2_POINT:",.2f",FLOAT_3_POINT:",.3f",FLOAT_SIGNED:"+,.2f",FLOAT_SIGNED_1_POINT:"+,.1f",FLOAT_SIGNED_2_POINT:"+,.2f",FLOAT_SIGNED_3_POINT:"+,.3f",INTEGER:",d",INTEGER_SIGNED:"+,d",PERCENT:",.2%",PERCENT_1_POINT:",.1%",PERCENT_2_POINT:",.2%",PERCENT_3_POINT:",.3%",PERCENT_SIGNED:"+,.2%",PERCENT_SIGNED_1_POINT:"+,.1%",PERCENT_SIGNED_2_POINT:"+,.2%",PERCENT_SIGNED_3_POINT:"+,.3%",SI:".3s",SI_1_DIGIT:".1s",SI_2_DIGIT:".2s",SI_3_DIGIT:".3s",SMART_NUMBER:"SMART_NUMBER",SMART_NUMBER_SIGNED:"SMART_NUMBER_SIGNED"};t.default=i},1056:function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e){const{description:t,formatString:n=(0,r.isRequired)("config.formatString"),label:i,locale:a}=e;let c,l=!1;try{c=void 0===a?(0,o.format)(n):(0,o.formatLocale)(a).format(n)}catch(e){c=e=>e+" (Invalid format: "+n+")",l=!0}return new s.default({description:t,formatFunc:c,id:n,isInvalid:l,label:i})};var i,o=n(500),r=n(22),s=(i=n(1038))&&i.__esModule?i:{default:i}},1065:function(e,t,n){"use strict";t.__esModule=!0,t.getNumberFormatter=t.formatNumber=t.PREVIEW_VALUE=t.createSiAtMostNDigitFormatter=t.createDurationFormatter=t.createD3NumberFormatter=t.getNumberFormatterRegistry=t.NumberFormatter=t.NumberFormats=void 0;var i=d(n(1045));t.NumberFormats=i.default;var o=u(n(1038));t.NumberFormatter=o.default,t.PREVIEW_VALUE=o.PREVIEW_VALUE;var r=u(n(1067));t.getNumberFormatterRegistry=r.default,t.formatNumber=r.formatNumber,t.getNumberFormatter=r.getNumberFormatter;var s=d(n(1056));t.createD3NumberFormatter=s.default;var a=d(n(1070));t.createDurationFormatter=a.default;var c=d(n(1073));function l(){if("function"!=typeof WeakMap)return null;var e=new WeakMap;return l=function(){return e},e}function u(e){if(e&&e.__esModule)return e;if(null===e||"object"!=typeof e&&"function"!=typeof e)return{default:e};var t=l();if(t&&t.has(e))return t.get(e);var n={},i=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var o in e)if(Object.prototype.hasOwnProperty.call(e,o)){var r=i?Object.getOwnPropertyDescriptor(e,o):null;r&&(r.get||r.set)?Object.defineProperty(n,o,r):n[o]=e[o]}return n.default=e,t&&t.set(e,n),n}function d(e){return e&&e.__esModule?e:{default:e}}t.createSiAtMostNDigitFormatter=c.default},1067:function(e,t,n){"use strict";t.__esModule=!0,t.getNumberFormatter=function(e){return s().get(e)},t.formatNumber=function(e,t){return s().format(e,t)},t.default=void 0;var i,o=n(22),r=(i=n(1068))&&i.__esModule?i:{default:i};const s=(0,o.makeSingleton)(r.default);var a=s;t.default=a},1068:function(e,t,n){"use strict";t.__esModule=!0,t.default=void 0;var i=n(22),o=a(n(1056)),r=a(n(1069)),s=a(n(1045));function a(e){return e&&e.__esModule?e:{default:e}}class c extends i.RegistryWithDefaultKey{constructor(){super({name:"NumberFormatter",overwritePolicy:i.OverwritePolicy.WARN}),this.registerValue(s.default.SMART_NUMBER,(0,r.default)()),this.registerValue(s.default.SMART_NUMBER_SIGNED,(0,r.default)({signed:!0})),this.setDefaultKey(s.default.SMART_NUMBER)}get(e){const t=(""+(null==e||""===e?this.defaultKey:e)).trim();if(this.has(t))return super.get(t);const n=(0,o.default)({formatString:t});return this.registerValue(t,n),n}format(e,t){return this.get(e)(t)}}t.default=c},1069:function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e={}){const{description:t,signed:n=!1,id:i,label:s}=e,u=n?e=>e>0?"+":"":()=>"";return new o.default({description:t,formatFunc:e=>""+u(e)+function(e){if(0===e)return"0";const t=Math.abs(e);if(t>=1e3)return a(e).replace("G","B");if(t>=1)return c(e);if(t>=.001)return l(e);if(t>1e-6)return a(1e6*e)+"µ";return a(e)}(e),id:i||n?r.default.SMART_NUMBER_SIGNED:r.default.SMART_NUMBER,label:null!=s?s:"Adaptive formatter"})};var i=n(500),o=s(n(1038)),r=s(n(1045));function s(e){return e&&e.__esModule?e:{default:e}}const a=(0,i.format)(".3~s"),c=(0,i.format)(".2~f"),l=(0,i.format)(".4~f")},1070:function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e={}){const{description:t,id:n,label:r,multiplier:s=1}=e,a=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,["description","id","label","multiplier"]);return new o.default({description:t,formatFunc:e=>(0,i.default)(e*s,a),id:null!=n?n:"duration_format",label:null!=r?r:"Duration formatter"})};var i=r(n(1071)),o=r(n(1038));function r(e){return e&&e.__esModule?e:{default:e}}},1071:function(e,t,n){"use strict";const i=n(1072);e.exports=(e,t={})=>{if(!Number.isFinite(e))throw new TypeError("Expected a finite number");t.colonNotation&&(t.compact=!1,t.formatSubMilliseconds=!1,t.separateMilliseconds=!1,t.verbose=!1),t.compact&&(t.secondsDecimalDigits=0,t.millisecondsDecimalDigits=0);const n=[],o=(e,i,o,r)=>{if(!(0!==n.length&&t.colonNotation||0!==e||t.colonNotation&&"m"===o))return;let s,a;if(r=(r||e||"0").toString(),t.colonNotation){s=n.length>0?":":"",a="";const e=r.includes(".")?r.split(".")[0].length:r.length,t=n.length>0?2:1;r="0".repeat(Math.max(0,t-e))+r}else s="",a=t.verbose?" "+(c=i,1===e?c:`${c}s`):o;var c;n.push(s+r+a)},r=i(e);if(o(Math.trunc(r.days/365),"year","y"),o(r.days%365,"day","d"),o(r.hours,"hour","h"),o(r.minutes,"minute","m"),t.separateMilliseconds||t.formatSubMilliseconds||e<1e3)if(o(r.seconds,"second","s"),t.formatSubMilliseconds)o(r.milliseconds,"millisecond","ms"),o(r.microseconds,"microsecond","µs"),o(r.nanoseconds,"nanosecond","ns");else{const e=r.milliseconds+r.microseconds/1e3+r.nanoseconds/1e6,n="number"==typeof t.millisecondsDecimalDigits?t.millisecondsDecimalDigits:0,i=e>=1?Math.round(e):Math.ceil(e),s=n?e.toFixed(n):i;o(Number.parseFloat(s,10),"millisecond","ms",s)}else{const n=((e,t)=>{const n=Math.floor(e*10**t+1e-7);return(Math.round(n)/10**t).toFixed(t)})(e/1e3%60,"number"==typeof t.secondsDecimalDigits?t.secondsDecimalDigits:1),i=t.keepDecimalsOnWholeSeconds?n:n.replace(/\.0+$/,"");o(Number.parseFloat(i,10),"second","s",i)}if(0===n.length)return"0"+(t.verbose?" milliseconds":"ms");if(t.compact)return n[0];if("number"==typeof t.unitCount){const e=t.colonNotation?"":" ";return n.slice(0,Math.max(t.unitCount,1)).join(e)}return t.colonNotation?n.join(""):n.join(" ")}},1072:function(e,t,n){"use strict";e.exports=e=>{if("number"!=typeof e)throw new TypeError("Expected a number");const t=e>0?Math.floor:Math.ceil;return{days:t(e/864e5),hours:t(e/36e5)%24,minutes:t(e/6e4)%60,seconds:t(e/1e3)%60,milliseconds:t(e)%1e3,microseconds:t(1e3*e)%1e3,nanoseconds:t(1e6*e)%1e3}}},1073:function(e,t,n){"use strict";t.__esModule=!0,t.default=function(e={}){const{description:t,n:n=3,id:i,label:s}=e,a=(0,o.format)("."+n+"s");return new r.default({description:t,formatFunc:e=>{const t=a(e);return t.slice(-1)<"A"?parseFloat(t).toString():t},id:null!=i?i:"si_at_most_"+n+"_digit",label:null!=s?s:"SI with at most "+n+" significant digits"})};var i,o=n(500),r=(i=n(1038))&&i.__esModule?i:{default:i}},1331:function(e,t,n){"use strict";var i=n(1029),o=n(1030),r=n(1032),s=n(1031),a=n(1043),c=n(1033),l=n(1122),u=n(1099),d=n(1358),f=n(1216),p=n(1162),_="#define SHADER_NAME arc-layer-fragment-shader\n\nprecision highp float;\n\nvarying vec4 vColor;\n\nvoid main(void) {\n  gl_FragColor = vColor;\n  gl_FragColor = picking_filterHighlightColor(gl_FragColor);\n  gl_FragColor = picking_filterPickingColor(gl_FragColor);\n}\n";n.d(t,"a",(function(){return h}));var m=d.a.fp64LowPart,g=[0,0,0,255],v={fp64:!1,getSourcePosition:{type:"accessor",value:function(e){return e.sourcePosition}},getTargetPosition:{type:"accessor",value:function(e){return e.targetPosition}},getSourceColor:{type:"accessor",value:g},getTargetColor:{type:"accessor",value:g},getWidth:{type:"accessor",value:1},getHeight:{type:"accessor",value:1},getTilt:{type:"accessor",value:0},widthUnits:"pixels",widthScale:{type:"number",value:1,min:0},widthMinPixels:{type:"number",value:0,min:0},widthMaxPixels:{type:"number",value:Number.MAX_SAFE_INTEGER,min:0},getStrokeWidth:{deprecatedFor:"getWidth"}},h=function(e){function t(){return Object(i.a)(this,t),Object(r.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(c.a)(t,e),Object(o.a)(t,[{key:"getShaders",value:function(){return this.use64bitProjection()?{vs:"#define SHADER_NAME arc-layer-vertex-shader-64\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\n\nattribute vec4 instancePositions;\nattribute vec4 instancePositions64Low;\n\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\n\nvec2 paraboloid_fp64(vec2 source[2], vec2 target[2], float ratio) {\n\n  vec2 x[2];\n  vec2_mix_fp64(source, target, ratio, x);\n  vec2 center[2];\n  vec2_mix_fp64(source, target, 0.5, center);\n\n  vec2 dSourceCenter = vec2_distance_fp64(source, center);\n  vec2 dXCenter = vec2_distance_fp64(x, center);\n  return mul_fp64(sum_fp64(dSourceCenter, dXCenter), sub_fp64(dSourceCenter, dXCenter));\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  vec2 offset_screenspace = dir_screenspace * offset_direction * width / 2.0;\n  vec2 offset_clipspace = project_pixel_size_to_clipspace(offset_screenspace);\n\n  return offset_clipspace;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvoid get_pos_fp64(vec2 source[2], vec2 target[2], float segmentRatio, out vec2 position[4]) {\n\n  vec2 vertex_height = paraboloid_fp64(source, target, segmentRatio);\n\n  vec2 position_temp[2];\n\n  vec2_mix_fp64(source, target, segmentRatio, position_temp);\n\n  position[0] = position_temp[0];\n  position[1] = position_temp[1];\n\n  if (vertex_height.x < 0.0 || (vertex_height.x == 0.0 && vertex_height.y <= 0.0)) {\n    vertex_height = vec2(0.0, 0.0);\n  }\n\n  position[2] = sqrt_fp64(vertex_height);\n  position[3] = vec2(1.0, 0.0);\n}\n\nvoid main(void) {\n  vec2 projected_source_coord[2];\n  vec2 projected_target_coord[2];\n\n  project_position_fp64(instancePositions.xy, instancePositions64Low.xy, projected_source_coord);\n  project_position_fp64(instancePositions.zw, instancePositions64Low.zw, projected_target_coord);\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec2 curr_pos_modelspace[4];\n\n  get_pos_fp64(projected_source_coord, projected_target_coord, segmentRatio,\n    curr_pos_modelspace);\n\n  vec2 next_pos_modelspace[4];\n\n  get_pos_fp64(projected_source_coord, projected_target_coord, nextSegmentRatio,\n    next_pos_modelspace);\n\n  vec4 curr_pos_clipspace = project_common_position_to_clipspace_fp64(curr_pos_modelspace);\n  vec4 next_pos_clipspace = project_common_position_to_clipspace_fp64(next_pos_modelspace);\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n\n  vec2 offset = getExtrusionOffset(next_pos_clipspace.xy - curr_pos_clipspace.xy, positions.y, widthPixels);\n\n  gl_Position = curr_pos_clipspace + vec4(offset, 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n  vColor = vec4(color.rgb, color.a * opacity);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:_,modules:["project64","picking"]}:{vs:"#define SHADER_NAME arc-layer-vertex-shader\n\nattribute vec3 positions;\nattribute vec4 instanceSourceColors;\nattribute vec4 instanceTargetColors;\nattribute vec4 instancePositions;\nattribute vec4 instancePositions64Low;\nattribute vec3 instancePickingColors;\nattribute float instanceWidths;\nattribute float instanceHeights;\nattribute float instanceTilts;\n\nuniform float numSegments;\nuniform float opacity;\nuniform float widthScale;\nuniform float widthMinPixels;\nuniform float widthMaxPixels;\n\nvarying vec4 vColor;\n\nfloat paraboloid(vec2 source, vec2 target, float ratio) {\n\n  vec2 x = mix(source, target, ratio);\n  vec2 center = mix(source, target, 0.5);\n\n  float dSourceCenter = distance(source, center);\n  float dXCenter = distance(x, center);\n  return (dSourceCenter + dXCenter) * (dSourceCenter - dXCenter);\n}\nvec2 getExtrusionOffset(vec2 line_clipspace, float offset_direction, float width) {\n  vec2 dir_screenspace = normalize(line_clipspace * project_uViewportSize);\n  dir_screenspace = vec2(-dir_screenspace.y, dir_screenspace.x);\n\n  vec2 offset_screenspace = dir_screenspace * offset_direction * width / 2.0;\n  vec2 offset_clipspace = project_pixel_size_to_clipspace(offset_screenspace);\n\n  return offset_clipspace;\n}\n\nfloat getSegmentRatio(float index) {\n  return smoothstep(0.0, 1.0, index / (numSegments - 1.0));\n}\n\nvec3 getPos(vec2 source, vec2 target, float segmentRatio) {\n  float vertexHeight = sqrt(max(0.0, paraboloid(source, target, segmentRatio))) * instanceHeights;\n\n  float tiltAngle = radians(instanceTilts);\n  vec2 tiltDirection = normalize(target - source);\n  vec2 tilt = vec2(-tiltDirection.y, tiltDirection.x) * vertexHeight * sin(tiltAngle);\n\n  return vec3(\n    mix(source, target, segmentRatio) + tilt,\n    vertexHeight * cos(tiltAngle)\n  );\n}\n\nvoid main(void) {\n  vec2 source = project_position(vec3(instancePositions.xy, 0.0), instancePositions64Low.xy).xy;\n  vec2 target = project_position(vec3(instancePositions.zw, 0.0), instancePositions64Low.zw).xy;\n\n  float segmentIndex = positions.x;\n  float segmentRatio = getSegmentRatio(segmentIndex);\n  float indexDir = mix(-1.0, 1.0, step(segmentIndex, 0.0));\n  float nextSegmentRatio = getSegmentRatio(segmentIndex + indexDir);\n\n  vec3 currPos = getPos(source, target, segmentRatio);\n  vec3 nextPos = getPos(source, target, nextSegmentRatio);\n  vec4 curr = project_common_position_to_clipspace(vec4(currPos, 1.0));\n  vec4 next = project_common_position_to_clipspace(vec4(nextPos, 1.0));\n  float widthPixels = clamp(\n    project_size_to_pixel(instanceWidths * widthScale),\n    widthMinPixels, widthMaxPixels\n  );\n  vec2 offset = getExtrusionOffset((next.xy - curr.xy) * indexDir, positions.y, widthPixels);\n  gl_Position = curr + vec4(offset, 0.0, 0.0);\n\n  vec4 color = mix(instanceSourceColors, instanceTargetColors, segmentRatio) / 255.;\n  vColor = vec4(color.rgb, color.a * opacity);\n  picking_setPickingColor(instancePickingColors);\n}\n",fs:_,modules:["picking"]}}},{key:"initializeState",value:function(){this.getAttributeManager().addInstanced({instancePositions:{size:4,transition:!0,accessor:["getSourcePosition","getTargetPosition"],update:this.calculateInstancePositions},instancePositions64Low:{size:4,accessor:["getSourcePosition","getTargetPosition"],update:this.calculateInstancePositions64Low},instanceSourceColors:{size:4,type:5121,transition:!0,accessor:"getSourceColor",defaultValue:g},instanceTargetColors:{size:4,type:5121,transition:!0,accessor:"getTargetColor",defaultValue:g},instanceWidths:{size:1,transition:!0,accessor:"getWidth",defaultValue:1},instanceHeights:{size:1,transition:!0,accessor:"getHeight",defaultValue:1},instanceTilts:{size:1,transition:!0,accessor:"getTilt",defaultValue:0}})}},{key:"updateState",value:function(e){var n=e.props,i=e.oldProps,o=e.changeFlags;if(Object(a.a)(Object(s.a)(t.prototype),"updateState",this).call(this,{props:n,oldProps:i,changeFlags:o}),n.fp64!==i.fp64){var r=this.context.gl;this.state.model&&this.state.model.delete(),this.setState({model:this._getModel(r)}),this.getAttributeManager().invalidateAll()}}},{key:"draw",value:function(e){var t=e.uniforms,n=this.context.viewport,i=this.props,o=i.widthUnits,r=i.widthScale,s=i.widthMinPixels,a=i.widthMaxPixels,c="pixels"===o?n.distanceScales.metersPerPixel[2]:1;this.state.model.setUniforms(Object.assign({},t,{widthScale:r*c,widthMinPixels:s,widthMaxPixels:a})).draw()}},{key:"_getModel",value:function(e){for(var t=[],n=0;n<50;n++)t=t.concat([n,-1,0,n,1,0]);var i=new f.a(e,Object.assign({},this.getShaders(),{id:this.props.id,geometry:new p.a({drawMode:5,attributes:{positions:new Float32Array(t)}}),isInstanced:!0,shaderCache:this.context.shaderCache}));return i.setUniforms({numSegments:50}),i}},{key:"calculateInstancePositions",value:function(e,t){var n=t.startRow,i=t.endRow,o=this.props,r=o.data,s=o.getSourcePosition,a=o.getTargetPosition,c=e.value,u=n*e.size,d=Object(l.a)(r,n,i),f=d.iterable,p=d.objectInfo,_=!0,m=!1,g=void 0;try{for(var v,h=f[Symbol.iterator]();!(_=(v=h.next()).done);_=!0){var x=v.value;p.index++;var b=s(x,p);c[u++]=b[0],c[u++]=b[1];var P=a(x,p);c[u++]=P[0],c[u++]=P[1]}}catch(e){m=!0,g=e}finally{try{_||null==h.return||h.return()}finally{if(m)throw g}}}},{key:"calculateInstancePositions64Low",value:function(e,t){var n=t.startRow,i=t.endRow,o=this.use64bitPositions();if(e.constant=!o,o){var r=this.props,s=r.data,a=r.getSourcePosition,c=r.getTargetPosition,u=e.value,d=n*e.size,f=Object(l.a)(s,n,i),p=f.iterable,_=f.objectInfo,g=!0,v=!1,h=void 0;try{for(var x,b=p[Symbol.iterator]();!(g=(x=b.next()).done);g=!0){var P=x.value;_.index++;var S=a(P,_);u[d++]=m(S[0]),u[d++]=m(S[1]);var y=c(P,_);u[d++]=m(y[0]),u[d++]=m(y[1])}}catch(e){v=!0,h=e}finally{try{g||null==b.return||b.return()}finally{if(v)throw h}}}else e.value=new Float32Array(4)}}]),t}(u.a);h.layerName="ArcLayer",h.defaultProps=v},500:function(e,t,n){"use strict";n.r(t);var i=n(1025);n.d(t,"formatDefaultLocale",(function(){return i.a})),n.d(t,"format",(function(){return i.b})),n.d(t,"formatPrefix",(function(){return i.c}));var o=n(320);n.d(t,"formatLocale",(function(){return o.a}));var r=n(217);n.d(t,"formatSpecifier",(function(){return r.b})),n.d(t,"FormatSpecifier",(function(){return r.a}));var s=n(1028);n.d(t,"precisionFixed",(function(){return s.a}));var a=n(1026);n.d(t,"precisionPrefix",(function(){return a.a}));var c=n(1027);n.d(t,"precisionRound",(function(){return c.a}))}}]);